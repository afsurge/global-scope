
SN Additional features - Ivana - 23.03.21

1. Deletion - doable, track all profile pics uploaded, Michael: delete old when uploading new!

3. Private msgs - store socket id and user id together somehow, lot of server side, front-end more straightforward, quite complicated, could take almost a day!

4. Wall posts - can be done w/o sockets, can be done with axios, only when both are friends, example of DW link on Slack random, og:... metadata in html, send request to website for the data (think)

5. Request Notification - push notifications, common for companies to use, also need list of socket ids with user ids, manageable in half day or one

6. Friends of friends - determine if friends and then render friends on otherProfile, easier than others to implement

7. Reduxify - no change for users, only for other developers, mainly for practice on Redux, when needing to pass functions have to use props (non-Redux)

2. List of Users Online - using sockets, example code, empty object outside io.on "connection" block in server.js, pair socket.id and userId as key-value of object, delete operator to remove socket.id property on "disconnect" (socket.on "disconnect"), (a) when someone just logs in we need to send them list of people online, (b) for those who are already online we need to inform that someone just logged in, 2 separate socket events for each above, warning about multiple tabs for same user, same user with multiple socket ids in onlineUsers obj, have to chk first before db query (b), (a) get all user ids from obj using Object.values(), db query example for getting info using multiple ids (array), also warning about multiple tabs here, (c) third event needed when user leaves website (log out, close, etc.), need to inform everyone that someone left, have to make sure before that completely left ie. if closed one of 3 tabs that user is still online, further talk about client side socket.js

Notes uploaded!
